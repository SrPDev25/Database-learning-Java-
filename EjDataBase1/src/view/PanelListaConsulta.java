/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package view;

import dataBaseControl.Conexion;
import dataBaseControl.OperacionesDAO;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import model.Categoria;
import model.Lista;
import model.Producto;
import model.ProductoLista;

/**
 *
 * @author dam
 */
public class PanelListaConsulta extends javax.swing.JPanel {

    Conexion bd;
    OperacionesDAO operaciones;
    DefaultComboBoxModel comboCategoriaModel;
    DefaultComboBoxModel comboListaModel;
    DefaultListModel listOpcionesModel;
    DefaultTableModel tblConsultaModel;

    public PanelListaConsulta(Conexion bd) {
        initComponents();
        this.bd = bd;
        operaciones = new OperacionesDAO(bd);

        comboCategoriaModel = new DefaultComboBoxModel();
        comboProductos.setModel(comboCategoriaModel);
        comboListaModel = new DefaultComboBoxModel();
        comboLista.setModel(comboListaModel);
        listOpcionesModel = new DefaultListModel();
        listProductos.setModel(listOpcionesModel);
        tblConsultaModel = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                if (column == 0) {
                    return false;
                } else {
                    return true;
                }
            }

        };
        tblConsulta.setModel(tblConsultaModel);
        tblConsultaModel.setColumnIdentifiers(new String[]{"Producto", "Cantidad"});
        cargarCategorias();
        cargarListas();

    }

    private void cargarProductos() {
        listOpcionesModel.addAll(operaciones.getProductos());
    }

    private void cargarProductos(int codigoCategoria) {
        listOpcionesModel.addAll(operaciones.getProductos(codigoCategoria));
    }

    private void cargarCategorias() {
        comboCategoriaModel.addElement("Seleciona categoria");
        comboCategoriaModel.addAll(operaciones.getCategorias());
    }

    private void cargarListas() {
        comboListaModel.addElement("Elige una lista");
        comboListaModel.addAll(operaciones.getListas());
    }

    /**
     * Comprueba si exista ya un producto en la tabla
     *
     * @param productoAnnadir
     * @return devuelve -1 si no existe o la posicion en la tabla si ya existe
     */
    private int productoEnLista(Producto productoAnnadir) {
        ArrayList<Producto> productosEnlistados = new ArrayList();
        int pos = -1;

        for (int i = 0; i < tblConsultaModel.getRowCount(); i++) {
            productosEnlistados.add((Producto) tblConsultaModel.getValueAt(i, 0));
        }
        pos = productosEnlistados.indexOf(productoAnnadir);
        return pos;
    }

    private void cleanTable() {
        while (tblConsulta.getRowCount() != 0) {
            tblConsultaModel.removeRow(0);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        comboLista = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblConsulta = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        listProductos = new javax.swing.JList<>();
        comboProductos = new javax.swing.JComboBox<>();
        btnAnnadir = new javax.swing.JButton();
        btnEliminarProducto = new javax.swing.JButton();
        btnAplicarCambios = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Consolas", 1, 36)); // NOI18N
        jLabel1.setText("CONSULTA LISTA");

        comboLista.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboLista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboListaActionPerformed(evt);
            }
        });

        tblConsulta.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblConsulta);

        listProductos.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(listProductos);

        comboProductos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboProductos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                comboProductosMouseClicked(evt);
            }
        });
        comboProductos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboProductosActionPerformed(evt);
            }
        });

        btnAnnadir.setText("<<");
        btnAnnadir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnnadirActionPerformed(evt);
            }
        });

        btnEliminarProducto.setText("Eliminar");
        btnEliminarProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarProductoActionPerformed(evt);
            }
        });

        btnAplicarCambios.setText("Aplicar cambios");
        btnAplicarCambios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAplicarCambiosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(105, 105, 105)
                        .addComponent(comboLista, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(comboProductos, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(btnAplicarCambios, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnEliminarProducto)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnAnnadir, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(19, 19, 19)))
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(comboLista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(comboProductos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAplicarCambios)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnEliminarProducto)
                            .addComponent(btnAnnadir, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(28, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void comboProductosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_comboProductosMouseClicked

    }//GEN-LAST:event_comboProductosMouseClicked

    private void comboProductosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboProductosActionPerformed

        listOpcionesModel.removeAllElements();
        if (comboProductos.getSelectedIndex() != 0) {
            Categoria categoria = (Categoria) comboCategoriaModel.getElementAt(comboProductos.getSelectedIndex());
            cargarProductos(categoria.getCodigo());
        } else {
            cargarProductos();
        }
    }//GEN-LAST:event_comboProductosActionPerformed

    private void btnAnnadirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnnadirActionPerformed
        Producto productoAnnadir = (Producto) listOpcionesModel.get(
                listProductos.getSelectedIndex());
        int pos = productoEnLista(productoAnnadir);
        if (pos != -1) {
            JOptionPane.showMessageDialog(this, "Producto ya en la lista", "Error", JOptionPane.WARNING_MESSAGE);
        } else if (comboLista.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(this, "No hay lista seleccionada", "Error", JOptionPane.WARNING_MESSAGE);
        } else {
            Vector v = new Vector();
            v.add(productoAnnadir);
            v.add(0);
            tblConsultaModel.addRow(v);
        }
    }//GEN-LAST:event_btnAnnadirActionPerformed

    private void comboListaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboListaActionPerformed
        cleanTable();
        Lista lista;
        ArrayList<ProductoLista> productos;

        if (comboLista.getSelectedIndex() != 0) {
            lista = (Lista) comboListaModel.getElementAt(
                    comboLista.getSelectedIndex());
            productos = operaciones.getProductosLista(lista.getCodigo());
            for (ProductoLista i : productos) {
                Vector v = new Vector();
                v.add(i.getProducto());
                v.add(i.getCantidad());
                tblConsultaModel.addRow(v);
            }
        }

    }//GEN-LAST:event_comboListaActionPerformed

    private void btnEliminarProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarProductoActionPerformed
        int pos = tblConsulta.getSelectedRow();
        if (pos >= 0) {
            tblConsultaModel.removeRow(pos);
        }
    }//GEN-LAST:event_btnEliminarProductoActionPerformed

    private void btnAplicarCambiosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAplicarCambiosActionPerformed
        ArrayList<ProductoLista> newProductos = new ArrayList();
        Lista lista;

        if (comboLista.getSelectedIndex() != 0) {
            lista = (Lista) comboListaModel.getElementAt(comboLista.getSelectedIndex());
            for (int i = 0; i < tblConsulta.getRowCount(); i++) {
                int n=(int) tblConsultaModel.getValueAt(i, 1);
                newProductos.add(new ProductoLista((Producto) tblConsultaModel.getValueAt(i, 0),
                         i));
            }

            //Si los productos no siguen igual se producirá el update
            if (!newProductos.equals(operaciones.getProductosLista(lista.getCodigo()))) {
                operaciones.actualizarLista(newProductos, lista.getCodigo());
            }

        }

    }//GEN-LAST:event_btnAplicarCambiosActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAnnadir;
    private javax.swing.JButton btnAplicarCambios;
    private javax.swing.JButton btnEliminarProducto;
    private javax.swing.JComboBox<String> comboLista;
    private javax.swing.JComboBox<String> comboProductos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList<String> listProductos;
    private javax.swing.JTable tblConsulta;
    // End of variables declaration//GEN-END:variables
}
